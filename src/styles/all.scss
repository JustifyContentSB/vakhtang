@use "sass:color";

@import "partials";
@import "vendor";

@if (length($icomoon-icons) > 0) {
    @font-face {
        font-family: "#{$icomoon-font-family}";
        font-weight: normal;
        font-style: normal;
        font-display: swap;
        src: url("../fonts/#{$icomoon-font-name}.eot?7sxir3");
        src:
            url("../fonts/#{$icomoon-font-name}.eot?7sxir3#iefix") format("embedded-opentype"),
            url("../fonts/#{$icomoon-font-name}.ttf?7sxir3") format("truetype"),
            url("../fonts/#{$icomoon-font-name}.woff?7sxir3") format("woff"),
            url("../fonts/#{$icomoon-font-name}.svg?7sxir3#icomoon") format("svg");
    }

    [class^="#{$icomoon-prefix}"],
    [class*="#{$icomoon-prefix}"] {
        @include icomoon-base();
    }

    @each $icon, $content in $icomoon-icons {
        #{unquote('.' + $icomoon-prefix + $icon)} {
            &:before {
                content: $content;
            }
        }
    }
}

@font-face {
    font-family: "Source Serif Pro";
    font-weight: 300;
    font-style: normal;
    font-display: swap;
    src: url("../fonts/sourceserifpro/SourceSerifPro-Light.eot");
    src:
        url("../fonts/sourceserifpro/SourceSerifPro-Light.eot") format("embedded-opentype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Light.ttf") format("truetype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Light.woff") format("woff"),
        url("../fonts/sourceserifpro/SourceSerifPro-Light.woff2") format("woff2"),
        url("../fonts/sourceserifpro/SourceSerifPro-Light.svg") format("svg");
}

@font-face {
    font-family: "Source Serif Pro";
    font-weight: 400;
    font-style: normal;
    font-display: swap;
    src: url("../fonts/sourceserifpro/SourceSerifPro-Regular.eot");
    src:
        url("../fonts/sourceserifpro/SourceSerifPro-Regular.eot") format("embedded-opentype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Regular.ttf") format("truetype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Regular.woff") format("woff"),
        url("../fonts/sourceserifpro/SourceSerifPro-Regular.woff2") format("woff2"),
        url("../fonts/sourceserifpro/SourceSerifPro-Regular.svg") format("svg");
}

@font-face {
    font-family: "Source Serif Pro";
    font-weight: 600;
    font-style: normal;
    font-display: swap;
    src: url("../fonts/sourceserifpro/SourceSerifPro-Semibold.eot");
    src:
        url("../fonts/sourceserifpro/SourceSerifPro-Semibold.eot") format("embedded-opentype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Semibold.ttf") format("truetype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Semibold.woff") format("woff"),
        url("../fonts/sourceserifpro/SourceSerifPro-Semibold.woff2") format("woff2"),
        url("../fonts/sourceserifpro/SourceSerifPro-Semibold.svg") format("svg");
}

@font-face {
    font-family: "Source Serif Pro";
    font-weight: 700;
    font-style: normal;
    font-display: swap;
    src: url("../fonts/sourceserifpro/SourceSerifPro-Bold.eot");
    src:
        url("../fonts/sourceserifpro/SourceSerifPro-Bold.eot") format("embedded-opentype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Bold.ttf") format("truetype"),
        url("../fonts/sourceserifpro/SourceSerifPro-Bold.woff") format("woff"),
        url("../fonts/sourceserifpro/SourceSerifPro-Bold.woff2") format("woff2"),
        url("../fonts/sourceserifpro/SourceSerifPro-Bold.svg") format("svg");
}

*,
*:after,
*:before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html,
body {
    height: 100%;
}

html {
    font-feature-settings:
        "pnum" on,
        "lnum" on;
    text-size-adjust: 100%;
    text-rendering: optimizeLegibility;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-overflow-scrolling: touch;
    -webkit-tap-highlight-color: transparent;
}

body {
    font: #{$font-size}/#{$line-height} $font-family;
    font-size: 16px;
    font-weight: 300;
    line-height: 130%;
    color: $text;

    background: $body-background;

    &:before {
        display: none;
        visibility: hidden;

        @each $breakpoint, $width in $breakpoints {
            @include mo(#{$breakpoint}) {
                content: "#{$breakpoint}";
            }
        }
    }
}

a,
button {
    @include transition(color, border-color, background, opacity);
}

a {
    color: $primary;
    text-decoration: none;
    outline: 0 !important;

    @include hover() {
        color: color.adjust($primary, $lightness: 10%);
        text-decoration: none;
    }
}

img,
svg {
    max-width: 100%;
    height: auto;
    border: 0;
}

svg {
    fill: none;
}

ul,
ol {
    list-style: none;

    &,
    li {
        margin: 0;
        padding: 0;
    }
}

code {
    margin: 0 5px;
    padding: 5px 8px;

    font-size: 70%;
    color: $primary;
    vertical-align: middle;

    background: $gray-200;
    border-radius: 4px;
}

hr {
    height: 1px;
    background-color: $gray-200;
    border: 0;
}

figure {
    overflow: hidden;
}
